{"version":3,"sources":["shuffle.js","wordlist2.js","components/StartGame.jsx","wordlist3.js","App.js","serviceWorker.js","index.js"],"names":["shuffle","a","i","length","j","Math","floor","random","_ref","word_lists","wordlist2","wordlist3","StartGame","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRunning","isDone","startTime","Date","now","endTime","wordIndex","progressValue","numWords","listToUse","wordList","currentWord","handleWordChange","bind","assertThisInitialized","handleListSelect","event","setState","target","value","console","log","e","randoList","slice","curWord","isCorrect","concat","new_list","progress_val","splice","assign","_this2","react_default","createElement","reactstrap_es","className","sm","md","size","offset","block","color","onClick","startGame","_this3","for","type","name","id","onChange","_this4","percentDone","ceil","percentStr","NextWord","delta","abs","minutes","seconds","time_str","renderGameResult","renderGameSelect","renderGameRunning","Component","App","components_StartGame","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRAIO,SAASA,EAAQC,GACtB,IAAK,IAAIC,EAAID,EAAEE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACnC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADPM,EAEpB,CAACP,EAAEG,GAAIH,EAAEC,IAAvBD,EAAEC,GAFgCM,EAAA,GAE5BP,EAAEG,GAF0BI,EAAA,GAIvC,OAAOP,ECRT,ICKMQ,EAAa,CACjBC,UDNc,CAChB,OACA,MACA,QACA,OACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,KACA,OACA,OACA,OACA,OACA,QACA,QACA,MACA,OACA,OACA,OACA,WACA,MACA,QACA,MACA,QACA,QACA,OACA,UACA,OACA,SACA,OACA,QACA,MACA,QACA,MACA,MACA,OACA,OACA,MACA,YACA,OACA,OACA,OACA,OACA,SACA,OACA,QACA,QACA,MACA,MACA,MACA,OACA,UACA,OACA,QACA,OACA,MACA,OACA,OACA,UACA,OACA,OACA,MACA,QACA,OACA,MACA,OACA,OACA,OACA,YACA,OACA,KACA,OACA,MACA,OACA,OACA,UACA,QACA,SACA,MACA,OACA,QACA,MACA,OACA,UACA,QACA,QACA,OACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,SC7FEC,UCPc,CAChB,OACA,QACA,OACA,MACA,OACA,UACA,MACA,QACA,UACA,SACA,OACA,SACA,SACA,OACA,QACA,QACA,UACA,OACA,QACA,OACA,QACA,UACA,OACA,QACA,QACA,MACA,OACA,QACA,MACA,QACA,QACA,QACA,QACA,YACA,SACA,OACA,OACA,OACA,UACA,YACA,OACA,SACA,QACA,OACA,QACA,WACA,MACA,QACA,QACA,MACA,YACA,QACA,WACA,OACA,OACA,MACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,OACA,QACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,UACA,SACA,QACA,OACA,OACA,SACA,MACA,OACA,QACA,MACA,UACA,SACA,SACA,MACA,QACA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","file":"static/js/main.fc3523f6.chunk.js","sourcesContent":["/**\n * Shuffles array in place. ES6 version\n * @param {Array} a items An array containing the items.\n */\nexport function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n","\nconst wordlist2=[\n'over',\n'new',\n'sound',\n'take',\n'only',\n'little',\n'work',\n'know',\n'place',\n'years',\n'live',\n'me',\n'back',\n'give',\n'most',\n'very',\n'after',\n'thing',\n'our',\n'just',\n'name',\n'good',\n'sentence',\n'man',\n'think',\n'say',\n'great',\n'where',\n'help',\n'through',\n'much',\n'before',\n'line',\n'right',\n'too',\n'means',\n'old',\n'any',\n'same',\n'tell',\n'boy',\n'following',\n'came',\n'want',\n'show',\n'also',\n'around',\n'farm',\n'three',\n'small',\n'set',\n'put',\n'end',\n'does',\n'another',\n'well',\n'large',\n'must',\n'big',\n'even',\n'such',\n'because',\n'turn',\n'here',\n'why',\n'asked',\n'went',\n'men',\n'read',\n'need',\n'land',\n'different',\n'home',\n'us',\n'move',\n'try',\n'kind',\n'hand',\n'picture',\n'again',\n'change',\n'off',\n'play',\n'spell',\n'air',\n'away',\n'animals',\n'house',\n'point',\n'page',\n'letters',\n'mother',\n'answer',\n'found',\n'study',\n'still',\n'learn',\n'should',\n'America',\n'world'\n];\n\nexport default wordlist2;","import React, { Component } from 'react';\nimport { Jumbotron, Button, Row, Col, Progress, FormGroup, Label, Input } from 'reactstrap';\nimport { shuffle } from '../shuffle';\nimport wordlist2 from '../wordlist2';\nimport wordlist3 from '../wordlist3';\n\nconst word_lists = {\n  \"wordlist2\":wordlist2,\n  \"wordlist3\":wordlist3,\n};\n\n\nclass StartGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRunning: false,\n      isDone: false,\n      startTime: Date.now(),\n      endTime: Date.now(),\n      wordIndex: 0,\n      progressValue: 0,\n      numWords: 100,\n      listToUse: \"wordlist2\",\n      wordList: [],\n      currentWord: null\n    };\n\n    this.handleWordChange = this.handleWordChange.bind(this);\n    this.handleListSelect = this.handleListSelect.bind(this);\n  }\n\n  handleWordChange(event) {\n    this.setState({numWords: event.target.value});\n  }\n\n  handleListSelect(event) {\n    console.log(event);\n    this.setState({listToUse: event.target.value});\n  }\n\n\n  startGame(e) {\n\n    if (this.state.isRunning) { return; }\n    var randoList = word_lists[this.state.listToUse].slice(0,this.state.numWords);\n\n    // var randoList = wordlist2.slice(0);\n    shuffle(randoList);\n    const curWord = randoList[0];\n    this.setState({\n      isRunning: true,\n      isDone: false,\n      startTime: Date.now(),\n      endTime: Date.now(),\n      progressValue: 0,\n      numWords: randoList.length,\n      wordIndex: 0,\n      wordList: randoList,\n      currentWord: curWord\n    });\n\n    console.log(`started game:`)\n    console.log(this.state);\n    console.log(randoList);\n\n  }\n\n  NextWord(isCorrect) {\n    console.log(`The word is ${isCorrect}`);\n    let new_list = this.state.wordList.slice(0);\n    let progress_val = this.state.progressValue;\n    if (isCorrect === true) {\n      new_list.splice(0, 1);\n      progress_val = ((this.state.numWords - new_list.length) / this.state.numWords) * 100;\n      console.log(new_list);\n    }\n    else {\n      shuffle(new_list);\n      console.log(new_list);\n    }\n\n\n    if (new_list.length > 0) {\n      // update\n      this.setState({\n        wordList: new_list,\n        currentWord: Object.assign(new_list[0]),\n        progressValue: progress_val\n      });\n    }\n    else {\n      // game is over\n      this.setState({ isDone: true, isRunning: false, endTime: Date.now() })\n    }\n\n  }\n\n  renderGameStart() {\n    if (this.state.isRunning) {\n      return null;\n    }\n\n    return (\n      <Row>\n        <Col>\n          <Jumbotron>\n            <h1 className=\"display-3\">Abby's Word List!</h1>\n            <br />\n            <Row>\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}><Button block\n                color=\"primary\" size=\"lg\"\n                onClick={(e) => this.startGame(e)}\n              >Let's do this!</Button></Col>\n            </Row>\n          </Jumbotron>\n\n        </Col>\n      </Row>\n\n    );\n  }\n\n  renderGameSelect() {\n    if (this.state.isRunning) {\n      return null;\n    }\n\n    return (\n      <Row>\n        <Col>\n          <Jumbotron>\n            <h1 className=\"display-3\">Abby's Word List!</h1>\n            <br />\n            <Row>\n              <Col>\n              <FormGroup>\n                <Label for=\"numWords\">Number of Words</Label>\n                <Input type=\"select\" name=\"select\" id=\"numWords\" onChange={this.handleWordChange}>\n                  <option>100</option>\n                  <option>80</option>\n                  <option>60</option>\n                  <option>40</option>\n                  <option>20</option>\n                </Input>\n              </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <Label for=\"wordlist\">Wordlist</Label>\n                <Input type=\"select\" name=\"wordlistSelect\" id=\"wordlist\" onChange={this.handleListSelect}>\n                  <option value='wordlist2'>List 2</option>\n                  <option value='wordlist3'>List 3</option>\n                </Input>\n              </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}><Button block\n                color=\"primary\" size=\"lg\"\n                onClick={(e) => this.startGame(e)}\n              >Let's do this!</Button></Col>\n            </Row>\n          </Jumbotron>\n\n        </Col>\n      </Row>\n\n    );\n  }\n\n  renderGameRunning() {\n    if (!this.state.isRunning || this.state.isDone) {\n      return null;\n    }\n\n    const percentDone = Math.ceil(this.state.progressValue);\n    const percentStr = `${percentDone} %`\n\n    return (\n      <Row>\n        <Col>\n          <Jumbotron>\n            <h1 className=\"present-word\">{this.state.currentWord}</h1>\n            <br />\n            <Row>\n              <Col>\n                <Button\n                  color=\"success\" size=\"lg\"\n                  onClick={(e) => this.NextWord(true)}\n                  block\n                >Correct!</Button>\n              </Col>\n              <Col>\n                <Button\n                  color=\"danger\" size=\"lg\"\n                  onClick={(e) => this.NextWord(false)}\n                  block\n                >Uh-oh!</Button>\n              </Col>\n            </Row>\n            <br />\n            <br />\n            <Row>\n              <Col>\n                <Progress value={this.state.progressValue}>{percentStr}</Progress>\n              </Col>\n            </Row>\n          </Jumbotron>\n        </Col>\n      </Row>\n    );\n\n  }\n\n  renderGameResult() {\n    if (!this.state.isDone) {\n      return null;\n    }\n\n    // get total seconds between the times\n    var delta = Math.abs(this.state.endTime - this.state.startTime) / 1000;\n\n    // calculate (and subtract) whole days\n    const days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n\n    // calculate (and subtract) whole hours\n    const hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600;\n\n    // calculate (and subtract) whole minutes\n    const minutes = Math.floor(delta / 60) % 60;\n    delta -= minutes * 60;\n\n    // what's left is seconds\n    const seconds = Math.floor(delta % 60);  // in theory the modulus is not required\n\n    const time_str = `Time: ${minutes}:${seconds}`;\n\n    return (\n      <Row>\n        <Col>\n          <h1 className=\"present-word\">Done!</h1>\n          <h1 className=\"present-word\">{time_str}</h1>\n        </Col>\n      </Row>\n    );\n\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderGameResult()}\n        {this.renderGameSelect()}\n        {this.renderGameRunning()}\n      </div>\n\n    );\n  }\n}\n\n// const StartGame = (props) => {\n\n// };\n\nexport default StartGame;","\nconst wordlist3=[\n\"high\",\n\"every\",\n\"near\",\n\"add\",\n\"food\",\n\"between\",\n\"own\",\n\"below\",\n\"country\",\n\"plants\",\n\"last\",\n\"school\",\n\"father\",\n\"keep\",\n\"trees\",\n\"never\",\n\"started\",\n\"city\",\n\"earth\",\n\"eyes\",\n\"light\",\n\"thought\",\n\"head\",\n\"under\",\n\"story\",\n\"saw\",\n\"left\",\n\"don't\",\n\"few\",\n\"while\",\n\"along\",\n\"might\",\n\"close\",\n\"something\",\n\"seemed\",\n\"next\",\n\"hard\",\n\"open\",\n\"example\",\n\"beginning\",\n\"life\",\n\"always\",\n\"those\",\n\"both\",\n\"paper\",\n\"together\",\n\"got\",\n\"group\",\n\"often\",\n\"run\",\n\"important\",\n\"until\",\n\"children\",\n\"side\",\n\"feet\",\n\"car\",\n\"miles\",\n\"night\",\n\"walked\",\n\"white\",\n\"sea\",\n\"began\",\n\"grow\",\n\"took\",\n\"river\",\n\"four\",\n\"carry\",\n\"state\",\n\"once\",\n\"book\",\n\"hear\",\n\"stop\",\n\"without\",\n\"second\",\n\"later\",\n\"miss\",\n\"idea\",\n\"enough\",\n\"eat\",\n\"face\",\n\"watch\",\n\"far\",\n\"Indians\",\n\"really\",\n\"almost\",\n\"let\",\n\"above\",\n\"girl\",\n\"sometimes\",\n\"mountains\",\n\"cut\",\n\"young\",\n\"talk\",\n\"soon\",\n\"list\",\n\"song\",\n\"being\",\n\"leave\",\n\"family\",\n\"it's\"\n];\n\nexport default wordlist3;\n","import React, { Component } from 'react';\nimport './App.css';\nimport StartGame from './components/StartGame';\nimport {Container} from 'reactstrap';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <StartGame />\n      </Container>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}